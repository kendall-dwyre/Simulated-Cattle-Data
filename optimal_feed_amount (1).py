# -*- coding: utf-8 -*-
"""optimal_feed_amount.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C5cz6Jki4f1hk-hGxr6XEzNTn1KQwL8m
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder

# Load dataset
data_path = "cattle_feedlot_data.csv"
cattle_df = pd.read_csv(data_path)

# Encoding categorical variables
label_encoder = LabelEncoder()
cattle_df['Feed_Type_Encoded'] = label_encoder.fit_transform(cattle_df['Feed_Type'])

# Features and target (for optimal feed amount prediction)
X_optimal = cattle_df[['Weight', 'Age_in_Months', 'Avg_Gain_Per_Day', 'Days_on_Feed', 'Feed_Type_Encoded']]
y_optimal = cattle_df['Daily_Feed_Amount']

# Splitting the data into training and testing sets
X_train_optimal, X_test_optimal, y_train_optimal, y_test_optimal = train_test_split(X_optimal, y_optimal, test_size=0.2, random_state=42)

# Building a Random Forest Regressor for predicting optimal daily feed amount
rf_regressor = RandomForestRegressor(n_estimators=100, random_state=42)
rf_regressor.fit(X_train_optimal, y_train_optimal)

# Making predictions
y_pred_optimal = rf_regressor.predict(X_test_optimal)

# Evaluating the regression model
mse = mean_squared_error(y_test_optimal, y_pred_optimal)
r2 = r2_score(y_test_optimal, y_pred_optimal)

# Output results
print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")